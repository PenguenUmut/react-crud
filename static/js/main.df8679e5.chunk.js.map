{"version":3,"sources":["components/router/create.component.js","components/router/edit.component.js","components/TableRow.js","components/router/index.component.js","App.js","serviceWorker.js","index.js"],"names":["Create","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangePersonName","bind","assertThisInitialized","onChangeBusinessName","onChangeGstNumber","onSubmit","state","person_name","business_name","business_gst_number","e","setState","target","value","preventDefault","obj","console","log","react_default","a","createElement","style","marginTop","className","type","onChange","Component","Edit","match","params","id","history","push","align","TableRow","Link","to","_id","Index","business","map","object","i","components_TableRow","key","colSpan","tabRow","App","HashRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.df8679e5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Create extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChangePersonName = this.onChangePersonName.bind(this);\r\n        this.onChangeBusinessName = this.onChangeBusinessName.bind(this);\r\n        this.onChangeGstNumber = this.onChangeGstNumber.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            person_name: '',\r\n            business_name: '',\r\n            business_gst_number: ''\r\n        }\r\n    }\r\n    onChangePersonName(e) {\r\n        this.setState({\r\n            person_name: e.target.value\r\n        });\r\n    }\r\n    onChangeBusinessName(e) {\r\n        this.setState({\r\n            business_name: e.target.value\r\n        })\r\n    }\r\n    onChangeGstNumber(e) {\r\n        this.setState({\r\n            business_gst_number: e.target.value\r\n        })\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const obj = {\r\n            person_name: this.state.person_name,\r\n            business_name: this.state.business_name,\r\n            business_gst_number: this.state.business_gst_number\r\n        };\r\n        console.log('Creating data with POST method with object..');\r\n        console.log('http://localhost:8080/api/business', obj);\r\n        this.setState({\r\n            person_name: '',\r\n            business_name: '',\r\n            business_gst_number: ''\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ marginTop: 10 }}>\r\n                <h3>Add New Business</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Person Name:  </label>\r\n                        <input type=\"text\" className=\"form-control\"\r\n                            value={this.state.person_name}\r\n                            onChange={this.onChangePersonName}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Business Name: </label>\r\n                        <input type=\"text\" className=\"form-control\"\r\n                            value={this.state.business_name}\r\n                            onChange={this.onChangeBusinessName}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>GST Number: </label>\r\n                        <input type=\"text\" className=\"form-control\"\r\n                            value={this.state.business_gst_number}\r\n                            onChange={this.onChangeGstNumber}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Register Business\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Create;","import React, { Component } from 'react';\r\n\r\nclass Edit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChangePersonName = this.onChangePersonName.bind(this);\r\n        this.onChangeBusinessName = this.onChangeBusinessName.bind(this);\r\n        this.onChangeGstNumber = this.onChangeGstNumber.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    \r\n        this.state = {\r\n          person_name: '',\r\n          business_name: '',\r\n          business_gst_number:''\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        console.log('Getting data with id for editing..');\r\n        console.log('http://localhost:4000/business/edit/' + this.props.match.params.id);\r\n        this.setState({\r\n          person_name: 'Umut',\r\n          business_name: 'Development',\r\n          business_gst_number: '101'\r\n        });\r\n    }\r\n    onChangePersonName(e) {\r\n      this.setState({\r\n        person_name: e.target.value\r\n      });\r\n    }\r\n    onChangeBusinessName(e) {\r\n      this.setState({\r\n        business_name: e.target.value\r\n      })  \r\n    }\r\n    onChangeGstNumber(e) {\r\n      this.setState({\r\n        business_gst_number: e.target.value\r\n      })\r\n    }\r\n    onSubmit(e) {\r\n      e.preventDefault();\r\n      const obj = {\r\n        person_name: this.state.person_name,\r\n        business_name: this.state.business_name,\r\n        business_gst_number: this.state.business_gst_number\r\n      };\r\n      console.log('Updating data with PUT method with id and object..');\r\n      console.log('http://localhost:8080/api/business/' + this.props.match.params.id, obj);\r\n      this.props.history.push('/index');\r\n    }\r\n    render() {\r\n      return (\r\n        <div style={{ marginTop: 10 }}>\r\n            <h3 align=\"center\">Update Business</h3>\r\n            <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label>Person Name:  </label>\r\n                    <input type=\"text\" className=\"form-control\" \r\n                      value={this.state.person_name}\r\n                      onChange={this.onChangePersonName} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Business Name: </label>\r\n                    <input type=\"text\" className=\"form-control\" \r\n                      value={this.state.business_name}\r\n                      onChange={this.onChangeBusinessName} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>GST Number: </label>\r\n                    <input type=\"text\" className=\"form-control\" \r\n                      value={this.state.business_gst_number}\r\n                      onChange={this.onChangeGstNumber} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"submit\" value=\"Update Business\" className=\"btn btn-primary\"/>\r\n                </div>\r\n            </form>\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nexport default Edit;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass TableRow extends Component {\r\n  render() {\r\n    return (\r\n        <tr>\r\n          <td>\r\n            {this.props.obj.person_name}\r\n          </td>\r\n          <td>\r\n            {this.props.obj.business_name}\r\n          </td>\r\n          <td>\r\n            {this.props.obj.business_gst_number}\r\n          </td>\r\n          <td>\r\n          <Link to={\"/edit/\"+this.props.obj._id} className=\"btn btn-primary\">Edit</Link>\r\n          </td>\r\n          <td>\r\n            <button className=\"btn btn-danger\">Delete</button>\r\n          </td>\r\n        </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableRow;","import React, { Component } from 'react';\r\nimport TableRow from '../TableRow';\r\n\r\nclass Index extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {business: []};\r\n    }\r\n    componentDidMount(){\r\n        console.log('Getting datas with GET method without params..');\r\n        console.log('http://localhost:8080/api/business');\r\n        this.setState({\r\n            business : [{\r\n                _id:1,\r\n                person_name: 'Umut',\r\n                business_name: 'Development',\r\n                business_gst_number: '101'\r\n                },{\r\n                _id:2,\r\n                person_name: 'Penguen',\r\n                business_name: 'Other',\r\n                business_gst_number: '202'\r\n                },{\r\n                _id:3,\r\n                person_name: 'Person Name',\r\n                business_name: 'Business Name',\r\n                business_gst_number: '303'\r\n                }]\r\n        });\r\n    }\r\n    tabRow(){\r\n      return this.state.business.map(function(object, i){\r\n          return <TableRow obj={object} key={i} />;\r\n      });\r\n    }\r\n    render() {\r\n      return (\r\n        <div>\r\n          <h3 align=\"center\">Business List</h3>\r\n          <table className=\"table table-striped\" style={{ marginTop: 20 }}>\r\n            <thead>\r\n              <tr>\r\n                <th>Person</th>\r\n                <th>Business</th>\r\n                <th>GST Number</th>\r\n                <th colSpan=\"2\">Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              { this.tabRow() }\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Index;","import React, { Component } from 'react';\nimport { HashRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport Create from './components/router/create.component';\nimport Edit from './components/router/edit.component';\nimport Index from './components/router/index.component';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <ul>\n            <li>\n              <Link to={'home'}>Home</Link>\n            </li>\n            <li>\n              <Link to={'create'}>Create</Link>\n            </li>\n            <li>\n              <Link to={'index'}>Index</Link>\n            </li>\n          </ul>\n          <br />\n          <h2>Welcome to React CRUD Tutorial</h2> <br />\n          <Switch>\n            <Route exact path='/create' component={Create} />\n            <Route path='/edit/:id' component={Edit} />\n            <Route path='/index' component={Index} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}